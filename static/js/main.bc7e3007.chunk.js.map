{"version":3,"sources":["Components/Nav/Nav.module.scss","Components/Nav/Nav.jsx","Utils/RenameKeys.js","Utils/movie-api.js","Components/FilmsList/FilmsList.jsx","Utils/Mapper.js","Pages/HomePage/HomePage.jsx","Components/Cast/Cast.jsx","Components/Reviews/Reviews.jsx","Components/Movie/MovieDetail.jsx","Pages/MovieDetailsPage/MovieDetailsPage.jsx","Pages/MoviesPage/MoviesPage.jsx","Components/App/App.jsx","index.js"],"names":["module","exports","withRouter","to","activeClassName","scss","navActive","exact","keysMap","obj","Object","keys","reduce","acc","key","API_KEY","axios","defaults","baseURL","fetchSearchMovies","movie","url","get","then","res","data","FilmsList","films","map","film","id","pathname","title","name","HomePage","state","fetchTrendingMovies","setState","Mapper","results","this","Component","Cast","credits","fetchCredits","props","movieId","cast","p","src","profile_path","alt","character","Reviews","reviews","fetchReviews","length","r","author","content","MovieDetail","overview","posterPath","voteAverage","genres","releaseDate","slice","Math","round","genre","defaultProps","MovieDetailsPage","RenameKeys","vote_average","poster_path","release_date","fetchMovie","match","params","type","MoviesPage","query","getFilms","handleSearch","e","preventDefault","target","firstChild","value","prevProps","prevState","onSubmit","autoComplete","placeholder","App","path","component","render","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.bc7e3007.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navActive\":\"Nav_navActive__1K2HZ\"};","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport scss from './Nav.module.scss';\n\nconst Nav = () => (\n  <div>\n    <ul>\n      <li>\n        <NavLink to=\"/\" activeClassName={scss.navActive} exact>\n          Home\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/Movies\" activeClassName={scss.navActive}>\n          Movies\n        </NavLink>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default withRouter(Nav);\n","export default (keysMap, obj) =>\n  Object.keys(obj).reduce(\n    (acc, key) => ({\n      ...acc,\n      ...{ [keysMap[key] || key]: obj[key] },\n    }),\n    {},\n  );\n","import axios from 'axios';\nimport RenameKeys from './RenameKeys';\n\nconst API_KEY = '56d683041d5d1a0178e72b4a2ffc8e86';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = () => {\n  const url = `trending/all/day?api_key=${API_KEY}`;\n\n  return axios.get(url).then(res => res.data);\n};\n\nexport const fetchSearchMovies = movie => {\n  const url = `search/movie?api_key=${API_KEY}&language=en-US&query=${movie}&page=1&include_adult=false`;\n\n  return axios.get(url).then(res => res.data);\n};\n\nexport const fetchMovie = id => {\n  const url = `movie/${id}?api_key=${API_KEY}`;\n\n  return axios.get(url).then(res =>\n    RenameKeys(\n      {\n        vote_average: 'voteAverage',\n        poster_path: 'posterPath',\n        release_date: 'releaseDate',\n      },\n      res.data,\n    ),\n  );\n};\n\nexport const fetchReviews = id => {\n  const url = `movie/${id}/reviews?api_key=${API_KEY}`;\n\n  return axios.get(url).then(res => res.data);\n};\n\nexport const fetchCredits = id => {\n  const url = `movie/${id}/credits?api_key=${API_KEY}`;\n\n  return axios.get(url).then(res => res.data);\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst FilmsList = ({ films }) => (\n  <div>\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <Link to={{ pathname: `movies/${film.id}` }}>{film.title}</Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nFilmsList.propTypes = {\n  films: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default FilmsList;\n","export default films => {\n  return films.map(({ name: title, ...props }) => ({\n    title,\n    ...props,\n  }));\n};\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { fetchTrendingMovies } from '../../Utils/movie-api';\nimport FilmsList from '../../Components/FilmsList/FilmsList';\nimport Mapper from '../../Utils/Mapper';\n\nclass HomePage extends Component {\n  state = { films: [] };\n\n  componentDidMount() {\n    fetchTrendingMovies().then(data =>\n      this.setState({ films: Mapper(data.results) }),\n    );\n  }\n\n  render() {\n    const { films } = this.state;\n    return (\n      <div>\n        <h2>Trending today</h2>\n        <FilmsList films={films} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(HomePage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCredits } from '../../Utils/movie-api';\n\nclass Cast extends Component {\n  state = {\n    credits: null,\n  };\n\n  static propTypes = {\n    movieId: PropTypes.number.isRequired,\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props;\n    fetchCredits(movieId).then(res => this.setState({ credits: res.cast }));\n  }\n\n  render() {\n    const { credits } = this.state;\n\n    return (\n      <div>\n        {credits && (\n          <div>\n            {credits.map(p => (\n              <div key={p.id}>\n                <div>\n                  <img\n                    src={`http://image.tmdb.org/t/p/w185${p.profile_path}`}\n                    alt=\"\"\n                  />\n                </div>\n                <div>{p.name}</div>\n                <div>Character: {p.character}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Cast;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchReviews } from '../../Utils/movie-api';\n\nclass Reviews extends Component {\n  state = {\n    reviews: null,\n  };\n\n  static propTypes = {\n    movieId: PropTypes.number.isRequired,\n  };\n\n  componentDidMount() {\n    const { movieId } = this.props;\n    fetchReviews(movieId).then(res => this.setState({ reviews: res.results }));\n  }\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <div>\n        {reviews && reviews.length ? (\n          <ul>\n            {reviews.map(r => (\n              <li key={r.id}>\n                <strong>{r.author}</strong>\n                <p>{r.content}</p>\n                <hr />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          'We dont have any reviews for this movie'\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Reviews;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieDetail = ({\n  title,\n  overview,\n  posterPath,\n  voteAverage,\n  genres,\n  releaseDate,\n}) => (\n  <div>\n    <img src={`https://image.tmdb.org/t/p/w500/${posterPath}`} alt=\"#\" />\n    <h1>\n      {title} ({releaseDate.slice(0, 4)})\n    </h1>\n    <p>User score: {Math.round(voteAverage * 10)}%</p>\n    <hr />\n    <h3>Overview</h3>\n    <p>{overview}</p>\n    <hr />\n    <h3>Genres</h3>\n    <p>{genres.reduce((acc, genre) => `${acc + genre.name} `, '')}</p>\n  </div>\n);\n\nMovieDetail.defaultProps = {\n  overview: 'Not Found',\n  voteAverage: 0,\n};\n\nMovieDetail.propTypes = {\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string,\n  posterPath: PropTypes.string.isRequired,\n  voteAverage: PropTypes.number,\n  releaseDate: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  ).isRequired,\n};\n\nexport default MovieDetail;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovie } from '../../Utils/movie-api';\nimport Cast from '../../Components/Cast/Cast';\nimport Reviews from '../../Components/Reviews/Reviews';\nimport MovieDetail from '../../Components/Movie/MovieDetail';\n\nconst getIdFromProps = props => props.match.params.movie;\n\nclass MovieDetailsPage extends Component {\n  state = {\n    movie: null,\n  };\n\n  static propTypes = {\n    type: PropTypes.string,\n  };\n\n  componentDidMount() {\n    const match = getIdFromProps(this.props);\n    fetchMovie(match).then(movie => this.setState({ movie }));\n  }\n\n  render() {\n    const { type } = this.props;\n    const { movie } = this.state;\n    return (\n      <div>\n        {movie ? (\n          <div>\n            <Link to=\"/\">\n              <button type=\"button\">Go Back</button>\n            </Link>\n            <MovieDetail {...movie} />\n            <hr />\n            <div>Additional information</div>\n            <ul>\n              <li>\n                <Link to={`/movies/${movie.id}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${movie.id}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n            <hr />\n            {type === 'cast' && <Cast movieId={movie.id} />}\n            {type === 'reviews' && <Reviews movieId={movie.id} />}\n          </div>\n        ) : (\n          <p>Nothing Found</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MovieDetailsPage;\n","import React, { Component } from 'react';\nimport { fetchSearchMovies } from '../../Utils/movie-api';\nimport Mapper from '../../Utils/Mapper';\nimport FilmsList from '../../Components/FilmsList/FilmsList';\n\nclass MoviesPage extends Component {\n  state = { films: [], query: '' };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query } = this.state;\n    if (prevState.query !== query) {\n      this.getFilms();\n    }\n  }\n\n  getFilms = () => {\n    fetchSearchMovies(this.state.query).then(data =>\n      this.setState({ films: Mapper(data.results) }),\n    );\n  };\n\n  handleSearch = e => {\n    e.preventDefault();\n    this.setState({ query: e.target.firstChild.value });\n  };\n\n  render() {\n    const { films } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSearch}>\n          <input type=\"text\" autoComplete=\"off\" placeholder=\"Search films...\" />\n          <button type=\"submit\">Search</button>\n        </form>\n        {films.length > 0 && <FilmsList films={films} />}\n      </div>\n    );\n  }\n}\n\nexport default MoviesPage;\n","import React from 'react';\nimport './style.scss';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Nav from '../Nav/Nav';\nimport HomePage from '../../Pages/HomePage/HomePage';\nimport MovieDetailsPage from '../../Pages/MovieDetailsPage/MovieDetailsPage';\nimport MoviesPage from '../../Pages/MoviesPage/MoviesPage';\n\nconst App = () => {\n  return (\n    <div>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/movies/:movie\" component={MovieDetailsPage} />\n        <Route exact path=\"/movies/\" component={MoviesPage} />\n        <Route\n          exact\n          path=\"/movies/:movie/cast\"\n          render={props => <MovieDetailsPage {...props} type=\"cast\" />}\n        />\n        <Route\n          exact\n          path=\"/movies/:movie/reviews\"\n          render={props => <MovieDetailsPage {...props} type=\"reviews\" />}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}